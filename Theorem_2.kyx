/* Exported from KeYmaera X v4.9.9 */

Theorem "Model Pitfalls/Theorem 2"
Description "Theorem 2 to identify unchallenged controller".

Definitions
  Bool Zeta(Real s, Real e, Real a);           /* Loop invariant */
  Bool Env(Real s, Real e, Real a);            /* Environment assumptions */
  Bool Sys(Real s, Real e, Real a);            /* System assumptions */
  Bool Ctrl(Real s, Real e, Real a);           /* Control law */
  Bool Plant(Real s, Real e, Real a, Real t);  /* Evolution domain constraint */
  Bool R(Real e0, Real e);                     /* Env environment constraints */
  Real f(Real s);                              /* Differential evolution */
  Real T;                                      /* Sampling time */
  HP plant ::= {t:=0; {s' = f(s), t' = 1 & (Plant(s, e, a, t) & t <= T)}};
End.

ProgramVariables
  Real s, e, e0, a, a1;   /* The state. */
End.

Problem
\exists a1 \exists s \exists e (
    Zeta(s, e, a1) & <e:=*; ?Env(s, e, a1); a:=*; ?Sys(s, e, a);> (!Zeta(s, e, a) & <plant;> (!Zeta(s, e, a1))) 
)
->
\exists s, e, a1 (
    Zeta(s, e, a1) & <e:=*; ?Env(s, e, a1); a:=*; ?Sys(s, e, a); plant;> (!Zeta(s, e, a1))  /* Controller cannot be removed */
    )
End.

Tactic "Theorem 2: Proof with witness for existsR"
expandAllDefs;
implyR('R=="\exists a1 \exists s \exists e (Zeta(s,e,a1)&<e:=*;?Env(s,e,a1);a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))))->\exists a1 \exists e \exists s (Zeta(s,e,a1)&<e:=*;?Env(s,e,a1);a:=*;?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
existsL('L=="\exists a1 \exists s \exists e (Zeta(s,e,a1)&<e:=*;?Env(s,e,a1);a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))))");
existsL('L=="\exists s \exists e (Zeta(s,e,a1)&<e:=*;?Env(s,e,a1);a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))))");
existsL('L=="\exists e (Zeta(s,e,a1)&<e:=*;?Env(s,e,a1);a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))))");
andL('L=="Zeta(s,e,a1)&<e:=*;?Env(s,e,a1);a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
composed('L=="<e:=*;?Env(s,e,a1);a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
randomd('L=="<e:=*;><?Env(s,e,a1);a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
existsL('L=="\exists e <?Env(s,e,a1);a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
composed('L=="<?Env(s,e,a1);a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
testd('L=="<?Env(s,e,a1);><a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
andL('L=="Env(s,e,a1)&<a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
composed('L=="<a:=*;?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
randomd('L=="<a:=*;><?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
existsL('L=="\exists a <?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
testd('L=="<?Sys(s,e,a);>(!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
andL('L=="Sys(s,e,a)&!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))");
andL('L=="!Zeta(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))");
existsR("a1", 'R=="\exists a1 \exists e \exists s (Zeta(s,e,a1)&<e:=*;?Env(s,e,a1);a:=*;?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
existsR("e_0", 'R=="\exists e \exists s (Zeta(s,e,a1)&<e:=*;?Env(s,e,a1);a:=*;?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1)))");
existsR("s", 'R=="\exists s (Zeta(s,e_0,a1)&<e_0:=*;?Env(s,e_0,a1);a:=*;?Sys(s,e_0,a);t:=0;{s'=f(s),t'=1&Plant(s,e_0,a,t)&t<=T()}>(!Zeta(s,e_0,a1)))");
andR('R=="Zeta(s,e_0,a1)&<e_0:=*;?Env(s,e_0,a1);a:=*;?Sys(s,e_0,a);t:=0;{s'=f(s),t'=1&Plant(s,e_0,a,t)&t<=T()}>(!Zeta(s,e_0,a1))"); <(
  "Zeta(s,e_0,a1)":
    id,
  "<e_0:=*;?Env(s,e_0,a1);a:=*;?Sys(s,e_0,a);t:=0;{s'=f(s),t'=1&Plant(s,e_0,a,t)&t<=T()}>(!Zeta(s,e_0,a1))":
    composed('R=="<e_0:=*;?Env(s,e_0,a1);a:=*;?Sys(s,e_0,a);t:=0;{s'=f(s),t'=1&Plant(s,e_0,a,t)&t<=T()}>(!Zeta(s,e_0,a1))");
    randomd('R=="<e_0:=*;><?Env(s,e_0,a1);a:=*;?Sys(s,e_0,a);t:=0;{s'=f(s),t'=1&Plant(s,e_0,a,t)&t<=T()}>(!Zeta(s,e_0,a1))");
    existsR("e", 'R=="\exists e_0 <?Env(s,e_0,a1);a:=*;?Sys(s,e_0,a);t:=0;{s'=f(s),t'=1&Plant(s,e_0,a,t)&t<=T()}>(!Zeta(s,e_0,a1))");
    composed('R=="<?Env(s,e,a1);a:=*;?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))");
    testd('R=="<?Env(s,e,a1);><a:=*;?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))");
    andR('R=="Env(s,e,a1)&<a:=*;?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))"); <(
      "Env(s,e,a1)":
        id,
      "<a:=*;?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))":
        composed('R=="<a:=*;?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))");
        randomd('R=="<a:=*;><?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))");
        existsR("a", 'R=="\exists a <?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))");
        composed('R=="<?Sys(s,e,a);t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))");
        testd('R=="<?Sys(s,e,a);><t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))");
        andR('R=="Sys(s,e,a)&<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))"); <(
          "Sys(s,e,a)":
            id,
          "<t:=0;{s'=f(s),t'=1&Plant(s,e,a,t)&t<=T()}>(!Zeta(s,e,a1))":
            id
        )
    )
)
End.

End.
